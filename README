XML::Validator::Schema version 1.00

CHANGES

   1.00  2003-09-25
      - First Release.

DESCRIPTION

    This module allows you to validate XML documents against a W3C XML
    Schema. This module does not implement the full W3C XML Schema
    recommendation (http://www.w3.org/XML/Schema), but a useful subset. See
    the SCHEMA SUPPORT section in the module documention.

RATIONALE

    I'm writing a piece of software which uses Xerces/C++ (
    http://xml.apache.org/xerces-c/ ) to validate documents against XML
    Schema schemas. This works very well, but I'd like to release my project
    to the world. Requiring users to install Xerces is simply too onerous a
    requirement; few will have it already and the Xerces installation system
    leaves much to be desired.

    On CPAN, the only available XML Schema validator is XML::Schema.
    Unfortunately, this module isn't ready for use as it lacks the ability
    to actually parse the XML Schema document format! I looked into
    enhancing XML::Schema but I must admit that I'm not smart enough to
    understand the code... One day, when XML::Schema is completed I will
    replace this module with a wrapper around it.

    This module represents my attempt to support enough XML Schema syntax to
    be useful without attempting to tackle the full standard. I'm sure this
    will mean that it can't be used in all situations, but hopefully that
    won't prevent it from being used at all.

INSTALLATION

    The easiest way to install this module is using CPAN.pm:

       perl -MCPAN -e 'install XML::Validator::Schema'

    If you must do it the old-fashioned way, first install:

       Carp
       Test::More
       XML::SAX
       Tree::DAG_Node
       XML::Filter::BufferText

    Then unpack this module's distribution and do:

       perl Makefile.PL
       make test
       make install

AUTHOR

    Sam Tregar <sam@tregar.com>

COPYRIGHT AND LICENSE

    Copyright (C) 2002 Sam Tregar

    This program is free software; you can redistribute it and/or modify it
    under the same terms as Perl 5 itself.
